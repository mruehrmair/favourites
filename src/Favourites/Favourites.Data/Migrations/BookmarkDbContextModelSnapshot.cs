// <auto-generated />
using System;
using Favourites.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Favourites.Data.Migrations
{
    [DbContext(typeof(BookmarkDbContext))]
    partial class BookmarkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("BookmarkTag", b =>
                {
                    b.Property<string>("BookmarksName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagsName")
                        .HasColumnType("TEXT");

                    b.HasKey("BookmarksName", "TagsName");

                    b.HasIndex("TagsName");

                    b.ToTable("BookmarkTag");
                });

            modelBuilder.Entity("Favourites.Data.Entities.Bookmark", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WebLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("Favourites.Data.Entities.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BookmarkTag", b =>
                {
                    b.HasOne("Favourites.Data.Entities.Bookmark", null)
                        .WithMany()
                        .HasForeignKey("BookmarksName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Favourites.Data.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
